package edu.rice.cs.caper.lib.service_server;

/**
 * A server that may be started and stopped without blocking the signaling thread.
 *
 * @param <T> The type of any checked Throwable that can be generated by a call to stopAsync.
 */
public interface ServiceServer<T extends Throwable>
{
    /**
     * Starts the server.
     */
    void startAsync();

    /**
     * Stops the server.  Must be thread safe.
     */
    // thread safety for legal invocation from a shutdown hook thread. See ServiceServerShutdownHook.
    void stopAsync() throws T;

    /*
     * Blocks the caller until the server has stopped. Must be thread safe.
     */
    // thread safety for legal invocation from a shutdown hook thread. See ServiceServerShutdownHook.
    void join() throws InterruptedException;
}
